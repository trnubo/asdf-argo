#!/usr/bin/env bash

set -e
set -o pipefail

# detect the tool name
readonly __dirname="$(cd -P "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly toolname="$(basename "$(dirname "${__dirname}")")"

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
TMPDIR=${TMPDIR:-/tmp}
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

install() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local bin_install_path="$install_path/bin"
  local download_url="$(get_download_url $version)"

  mkdir -p "${bin_install_path}"

  local bin_path="${bin_install_path}/${toolname/-/}"
  echo "Downloading ${toolname/-/} from ${download_url}"
  curl -sSf -L "${download_url}" -o "${bin_path}"
  chmod +x $bin_path
}

get_platform() {
  uname | tr 'A-Z' 'a-z'
}

get_arch() {
  [[ "x86_64" == "$(uname -m)" ]] && echo "amd64" || { echo "arch no supported"; exit 1; }
}

get_download_url() {
  local version="$1"
  local platform="$(get_platform)"
  local arch="$(get_arch)"
  echo "https://github.com/argoproj/${toolname}/releases/download/v${version}/${toolname/-/}-${platform}-${arch}"
}

install $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
